<?xml version="1.0"?>
<robot name="cylinder" xmlns:xacro="http://ros.org/wiki/xacro">

 <link name="base_link" />

 <joint name="base_joint" type="fixed">
  <parent link="base_link"/>
  <child link="body_link"/>
  <origin xyz="0 0 0.052069" rpy="0 0 0"/>
 </joint>

 <link name="body_link">
  <inertial>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <mass value="1.0"/>
   <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
  </inertial>
  <visual>
   <geometry>
    <cylinder length="0.093" radius="0.12"/>
   </geometry>
   <material name="blue">
    <color rgba="0.0 0.0 1.0 1.0"/>
   </material>
  </visual>
  <collision>
   <geometry>
    <cylinder length="0.093" radius="0.12"/>
   </geometry>
  </collision>
 </link>
 <gazebo reference="body_link">
  <material>Gazebo/Gray</material>
 </gazebo>

 <joint name="lidar_joint" type="fixed">
  <parent link="base_link"/>
  <child link="base_scan"/>
  <origin xyz="0 0 0.105969" rpy="0 0 0"/>
 </joint>

 <link name="base_scan">
  <inertial>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <mass value="1.0"/>
   <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
  </inertial>
  <visual>
   <geometry>
    <cylinder length="0.0152" radius="0.017645"/>
   </geometry>
  </visual>
  <collision>
   <geometry>
    <cylinder length="0.0152" radius="0.017645"/>
   </geometry>
  </collision>
 </link>

 <gazebo reference="base_scan">
  <sensor name="ld06" type="ray">
   <always_on>true</always_on>
   <visualize>true</visualize>
   <pose>0 0 0.105969 0 0 0</pose>
   <update_rate>10</update_rate>
   <ray>
    <scan>
     <horizontal>
      <samples>360</samples>
      <resolution>1.000000</resolution>
      <min_angle>0.000000</min_angle>
      <max_angle>6.280000</max_angle>
     </horizontal>
    </scan>
    <range>
     <min>0.120000</min>
     <max>12.0</max>
     <resolution>0.015000</resolution>
    </range>
    <noise>
     <type>gaussian</type>
     <mean>0.0</mean>
     <stddev>0.01</stddev>
    </noise>
   </ray>
   <plugin name="cylinder_ros2_laserscan" filename="libgazebo_ros_ray_sensor.so">
    <ros>
     <remapping>~/out:=scan</remapping>
    </ros>
    <output_type>sensor_msgs/LaserScan</output_type>
    <frame_name>base_scan</frame_name>
   </plugin>
  </sensor>
 </gazebo>
 <gazebo reference="base_scan">
  <mu1>0.01</mu1>
  <mu2>0.01</mu2>
  <material>Gazebo/Black</material>
 </gazebo>

 <joint name="leftwheel_joint" type="continuous">
  <origin xyz="0 0.09832 0.0355" rpy="${radians(-90)} 0 0"/>
  <parent link="base_link"/>
  <child link="leftwheel_link"/>
  <axis xyz="0 0 1"/>
  <limit velocity="12" effort="0.4" />
  <dynamics damping="0.1" />
 </joint>

 <link name="leftwheel_link">
  <inertial>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <mass value="1.0"/>
   <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
  </inertial>
  <visual>
   <geometry>
    <cylinder radius="0.0355" length="0.0085"/>
   </geometry>
  </visual>
  <collision>
   <geometry>
    <cylinder radius="0.0355" length="0.0085"/>
   </geometry>
  </collision>
 </link>
 <gazebo reference="leftwheel_link">
  <material>Gazebo/Red</material>
  <mu1 value="2.5" />
  <mu2 value="2.5" />
  <kp value="50000" />
  <kd value="10" />
 </gazebo>

 <joint name="rightwheel_joint" type="continuous">
  <origin xyz="0 -0.09832 0.0355" rpy="${radians(-90)} 0 0"/>
  <parent link="base_link"/>
  <child link="rightwheel_link"/>
  <axis xyz="0 0 1"/>
  <limit velocity="12" effort="0.4" />
  <dynamics damping="0.1" />
 </joint>

 <link name="rightwheel_link">
  <inertial>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <mass value="1.0"/>
   <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
  </inertial>
  <visual>
   <geometry>
    <cylinder radius="0.0355" length="0.0085"/>
   </geometry>
  </visual>
  <collision>
   <geometry>
    <cylinder radius="0.0355" length="0.0085"/>
   </geometry>
  </collision>
 </link>
 <gazebo reference="rightwheel_link">
  <material>Gazebo/Red</material>
  <mu1 value="2.5" />
  <mu2 value="2.5" />
  <kp value="50000" />
  <kd value="10" />
 </gazebo>

 <joint name="front_ball_joint" type="fixed">
  <origin xyz="0.10 0 0.011" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="front_ball_link"/>
 </joint>
 
 <link name="front_ball_link">
  <visual>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
    <sphere radius="0.01"/>
   </geometry>
  </visual>
  <collision>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
    <sphere radius="0.01"/>
   </geometry>
  </collision>
 </link>
 <gazebo reference="front_ball_link">
  <material>Gazebo/Red</material>
  <mu1 value="0.01" />
  <mu2 value="0.01" />
 </gazebo>
 
 <joint name="back_ball_joint" type="fixed">
  <origin xyz="-0.10 0 0.01" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="back_ball_link"/>
 </joint>
 
 <link name="back_ball_link">
  <visual>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
    <sphere radius="0.01"/>
   </geometry>
  </visual>
  <collision>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
    <sphere radius="0.01"/>
   </geometry>
  </collision>
 </link>
 <gazebo reference="back_ball_link">
  <material>Gazebo/Red</material>
  <mu1 value="0.01" />
  <mu2 value="0.01" />
 </gazebo>

 <gazebo>
  <plugin name="cylinder_ros2_diff_drive" filename="libgazebo_ros_diff_drive.so">
   <update_rate>50</update_rate>
   <alwaysOn>true</alwaysOn>

   <legacyMode>false</legacyMode>
   
   <!-- wheels -->
   <left_joint>leftwheel_joint</left_joint>
   <right_joint>rightwheel_joint</right_joint>

   <!-- kinematics -->
   <wheel_separation>0.197</wheel_separation>
   <wheel_diameter>0.071</wheel_diameter>

   <!-- limits -->
   <wheelTorque>500</wheelTorque>
   <wheelAcceleration>0</wheelAcceleration>

   <!-- Receive velocity commands on this ROS topic -->
   <command_topic>cmd_vel</command_topic>

   <!-- output -->
   <!-- When false, publish no wheel odometry data to a ROS topic -->
   <publish_odom>true</publish_odom>

   <!-- When true, publish coordinate transform from odom to base_footprint -->
   <!-- I usually use the robot_localization package to publish this transform -->
   <publish_odom_tf>true</publish_odom_tf>
   
   <!-- When true, publish coordinate transform from base_link to the wheels -->
   <!-- The robot_state_publisher package is often used to publish this transform -->
   <publish_wheel_tf>true</publish_wheel_tf>
   <odometry_topic>odom</odometry_topic>
   <odometry_frame>odom</odometry_frame>

   <robot_base_frame>base_link</robot_base_frame>
   
   <publishWheelJointState>true</publishWheelJointState>
   
  </plugin>
 </gazebo>
 
</robot>
